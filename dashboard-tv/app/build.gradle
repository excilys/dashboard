apply plugin: 'com.android.application'
apply plugin: 'android-apt'


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.excilys.shoofleurs.dashboard"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            buildConfigField "String", "API_KEY", loadPropertiesFile("conf.properties").getProperty("apiKey")
            buildConfigField "String", "API_URL", '"http://192.168.0.15:8080"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_KEY", loadPropertiesFile("conf.properties").getProperty("apiKey")
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /* Android Support*/
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'

    /*Butterknife*/
    compile 'com.jakewharton:butterknife:8.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'

    /*Retrofit*/
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'

    /*Fresco*/
    compile 'com.facebook.fresco:fresco:0.10.0'

    /*EventBus*/
    compile 'org.greenrobot:eventbus:3.0.0'

    /*Gson*/
    compile 'com.google.code.gson:gson:2.6.2'

    /*NoSql database Paper*/
    compile 'io.paperdb:paperdb:1.5'

    /*Video caching*/
    compile 'com.danikula:videocache:2.3.4'

    /*Test dependencies*/
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    /*DB Inspector*/
    debugCompile 'im.dino:dbinspector:3.2.4@aar'
}

apply plugin: 'checkstyle'
checkstyle {
    configFile rootProject.file('checkstyle.xml')
    showViolations true
}

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    configFile rootProject.file('checkstyle.xml')
    classpath = files()
}

preBuild.dependsOn('checkstyle')


// Load the properties from the given file
def loadPropertiesFile(String name) {
    def props = new Properties()
    props.load(new FileInputStream(name))
    return props
}